{"ast":null,"code":"// const initState = {\n//   search: \"\",\n//   status: \"ALL\",\n//   priority: [],\n// };\n\n// const filterReducer = (state = initState, action) => {\n//   switch (action.type) {\n//     case \"filters/searchFilterChange\":\n//       return {\n//         ...state,\n//         search: action.payload,\n//       };\n\n//     case \"filters/statusFilterChange\":\n//       return {\n//         ...state,\n//         status: action.payload,\n//       };\n\n//     case \"filters/priorityFilterChange\":\n//       return {\n//         ...state,\n//         priority: action.payload,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n// export default filterReducer;\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nexport default createSlice({\n  name: \"filters\",\n  initialState: {\n    search: \"\",\n    status: \"ALL\",\n    priority: []\n  },\n  reducers: {\n    // => {type: filters/searchFilterChange} === action.creators\n    searchFilterChange: (state, action) => {\n      // mutation == nhung thuc te la immutation\n      state.search = action.payload;\n    },\n    statusFilterChange: (state, action) => {\n      state.status = action.payload;\n    },\n    priorityFilterChange: (state, action) => {\n      state.priority = action.payload;\n    }\n  }\n});","map":{"version":3,"names":["createSlice","name","initialState","search","status","priority","reducers","searchFilterChange","state","action","payload","statusFilterChange","priorityFilterChange"],"sources":["/Users/m1key/Development/MyProjects/codeWeb/React/todo-app-redux/src/components/Filters/filterSlice.js"],"sourcesContent":["// const initState = {\n//   search: \"\",\n//   status: \"ALL\",\n//   priority: [],\n// };\n\n// const filterReducer = (state = initState, action) => {\n//   switch (action.type) {\n//     case \"filters/searchFilterChange\":\n//       return {\n//         ...state,\n//         search: action.payload,\n//       };\n\n//     case \"filters/statusFilterChange\":\n//       return {\n//         ...state,\n//         status: action.payload,\n//       };\n\n//     case \"filters/priorityFilterChange\":\n//       return {\n//         ...state,\n//         priority: action.payload,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n// export default filterReducer;\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport default createSlice({\n  name: \"filters\",\n  initialState: {\n    search: \"\",\n    status: \"ALL\",\n    priority: [],\n  },\n  reducers: {\n    // => {type: filters/searchFilterChange} === action.creators\n    searchFilterChange: (state, action) => {\n      // mutation == nhung thuc te la immutation\n      state.search = action.payload;\n    },\n    statusFilterChange: (state, action) => {\n      state.status = action.payload;\n    },\n    priorityFilterChange: (state, action) => {\n      state.priority = action.payload;\n    },\n  },\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,eAAeA,WAAW,CAAC;EACzBC,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,KAAK;IACbC,QAAQ,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,kBAAkB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrC;MACAD,KAAK,CAACL,MAAM,GAAGM,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,kBAAkB,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACJ,MAAM,GAAGK,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDE,oBAAoB,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACvCD,KAAK,CAACH,QAAQ,GAAGI,MAAM,CAACC,OAAO;IACjC;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}